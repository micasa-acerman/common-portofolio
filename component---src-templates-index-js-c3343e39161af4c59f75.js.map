{"version":3,"sources":["webpack:///./src/components/Sidebar/Friend/index.js","webpack:///./src/components/Sidebar/LatestPost/index.js","webpack:///./src/components/Sidebar/Information/index.js","webpack:///./src/components/Sidebar/index.js","webpack:///./src/components/Tag/index.js","webpack:///./src/templates/index.js","webpack:///./src/components/ShareBox/index.js","webpack:///./src/components/Card/index.js","webpack:///./src/api/images.js"],"names":["config","friends","Friend","className","map","friend","ExternalLink","href","title","key","rel","LatestPost","posts","node","to","frontmatter","url","slug","fields","Information","totalCount","defaultProps","wordings","githubUsername","email","zhihuUsername","iconUrl","about","facebook","name","Icon","icon","target","Sidebar","latestPosts","pathPrefix","src","alt","query","render","data","all","limited","site","Tag","count","NavLinkText","color","text","style","NavLink","test","Page","pageContext","group","location","index","first","last","console","log","previousUrl","nextUrl","Fragment","marginTop","justifyContent","marginBottom","CommentButton","lineHeight","paddingLeft","onClick","ReactGA","event","category","action","ShareBox","hasCommentBox","CardHeader","headerImage","image","backgroundColor","date","backgroundImage","parseImgur","Card","headerBackgroundColor","description","tags","split","rawImage","size","match","resizedImage","replace","small","medium","large","huge","parseImageTag","parseTitle","module","exports","getGalleryImage"],"mappings":"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","file":"component---src-templates-index-js-c3343e39161af4c59f75.js","sourcesContent":["import React from 'react';\r\n\r\nimport ExternalLink from '../../ExternalLink';\r\n\r\nimport { config } from '../../../../data';\r\n\r\nimport './index.scss';\r\n\r\nconst { friends = [] } = config;\r\n\r\nconst Friend = () => (\r\n  <div className=\"friend\">\r\n    <p>Рекомендуемые ссылки</p>\r\n    {friends.map(friend => (\r\n      <ExternalLink\r\n        href={friend.href}\r\n        title={friend.title}\r\n        key={friend.title}\r\n        rel=\"noopener\"\r\n      />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nexport default Friend;\r\n","import React from 'react';\r\n\r\nimport { Link } from 'gatsby';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport './index.scss';\r\n\r\nconst LatestPost = ({ posts }) => (\r\n  <div className=\"latest-post\">\r\n    <p>Последние статьи</p>\r\n    {posts.map(({ node }) => (\r\n      <Link\r\n        to={node.frontmatter.url || node.frontmatter.slug || node.fields.slug}\r\n        key={node.frontmatter.url || node.frontmatter.slug || node.fields.slug}\r\n        href={node.frontmatter.url || node.frontmatter.slug || node.fields.slug}\r\n      >\r\n        {node.frontmatter.title}\r\n      </Link>\r\n    ))}\r\n  </div>\r\n);\r\n\r\nLatestPost.propTypes = {\r\n  posts: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n};\r\n\r\nexport default LatestPost;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Friend from '../Friend';\r\nimport LatestPost from '../LatestPost';\r\nimport './index.scss';\r\n\r\n// eslint-disable-next-line react/prop-types\r\nconst Information = ({ totalCount, posts }) => (\r\n  <div className=\"d-none d-lg-block information my-2\">\r\n    <hr />\r\n    <p>\r\n      Всего&nbsp;\r\n      {totalCount}\r\n      &nbsp;записей\r\n    </p>\r\n    <hr />\r\n    <LatestPost posts={posts} />\r\n    <hr />\r\n    <Friend />\r\n  </div>\r\n);\r\n\r\nInformation.propTypes = {\r\n  totalCount: PropTypes.number.isRequired,\r\n  posts: PropTypes.array,\r\n};\r\n\r\nInformation.defaultProps = {\r\n  posts: [],\r\n};\r\n\r\nexport default Information;\r\n","import React from 'react';\r\nimport { Link, StaticQuery, graphql } from 'gatsby';\r\nimport PropTypes from 'prop-types';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport { config } from '../../../data';\r\n\r\nimport Information from './Information';\r\n\r\nimport './index.scss';\r\n\r\nconst {\r\n  wordings = [],\r\n  githubUsername,\r\n  zhihuUsername,\r\n  email,\r\n  iconUrl,\r\n  about,\r\n  facebook,\r\n  name\r\n} = config;\r\n\r\nconst Icon = ({ href, icon }) => (\r\n  <a\r\n    target=\"_blank\"\r\n    href={href}\r\n    rel=\"external nofollow noopener noreferrer\"\r\n    className=\"custom-icon\"\r\n  >\r\n    <span className=\"fa-layers fa-fw fa-2x\">\r\n      <FontAwesomeIcon icon={icon} />\r\n    </span>\r\n  </a>\r\n);\r\n\r\nconst Sidebar = ({ totalCount, latestPosts,pathPrefix }) => (\r\n  <header className=\"intro-header site-heading text-center col-xl-2 col-lg-3 col-xs-12 order-lg-1\">\r\n    <div className=\"about-me\">\r\n      <Link to={about} href={about} className=\"name\">\r\n        <img className=\"avatar\" src={`${pathPrefix}/${iconUrl}`} alt=\"Calpa\" />\r\n        <h4>{name}</h4>\r\n      </Link>\r\n      <p className=\"mb-1\">{wordings[0]}</p>\r\n      <p className=\"mb-3\">{wordings[1]}</p>\r\n      {/* <Icon\r\n        href={`https://www.zhihu.com/people/${zhihuUsername}`}\r\n        icon={['far','telegram']}\r\n      /> */}\r\n      <Icon\r\n        href={`https://github.com/${githubUsername}`}\r\n        icon={['fab', 'github']}\r\n      />\r\n      <Icon href={`mailto:${email}`} icon={['far', 'envelope']} />\r\n      {facebook\r\n        && <Icon href={`https://www.facebook.com/${facebook}/`} icon={['fab', 'facebook']} />\r\n      }\r\n      <Information totalCount={totalCount} posts={latestPosts} />\r\n    </div>\r\n  </header>\r\n);\r\n\r\nIcon.propTypes = {\r\n  href: PropTypes.string.isRequired,\r\n  icon: PropTypes.arrayOf(PropTypes.string).isRequired,\r\n};\r\n\r\nSidebar.propTypes = {\r\n  totalCount: PropTypes.number,\r\n  latestPosts: PropTypes.array, //eslint-disable-line\r\n};\r\n\r\nSidebar.defaultProps = {\r\n  totalCount: 0,\r\n  latestPosts: [],\r\n};\r\n\r\nexport default () => (\r\n  <StaticQuery\r\n    query={graphql`\r\n      fragment cardData on MarkdownRemark {\r\n        fields {\r\n          slug\r\n        }\r\n        frontmatter {\r\n          id\r\n          title\r\n          url: slug\r\n          date\r\n          tags\r\n          description\r\n          headerImage\r\n        }\r\n      }\r\n\r\n      query SidebarQuery {\r\n        site(siteMetadata: {}) {\r\n          pathPrefix\r\n        }\r\n        all: allMarkdownRemark {\r\n          totalCount\r\n        }\r\n\r\n        limited: allMarkdownRemark(\r\n          sort: { order: DESC, fields: frontmatter___date }\r\n          limit: 6\r\n        ) {\r\n          latestPosts: edges {\r\n            node {\r\n              ...cardData\r\n            }\r\n          }\r\n        }\r\n      }\r\n    `}\r\n    render={data => <Sidebar {...data.all} {...data.limited} pathPrefix={data.site.pathPrefix} />}\r\n  />\r\n);\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Tag = ({ name, count }) => (\r\n  <a href={`/tag/${name}`} className=\"header-tag\">\r\n    {name}\r\n    &nbsp;\r\n    {count}\r\n  </a>\r\n);\r\n\r\nTag.propTypes = {\r\n  name: PropTypes.string.isRequired,\r\n  count: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n};\r\n\r\nTag.defaultProps = {\r\n  count: '',\r\n};\r\n\r\nexport default Tag;\r\n","/* eslint react/prop-types: 0 */\r\nimport React from 'react';\r\nimport Link from 'gatsby-link';\r\n\r\nimport Card from '../components/Card';\r\nimport Sidebar from '../components/Sidebar';\r\nimport ShareBox from '../components/ShareBox';\r\n\r\nimport './index.scss';\r\n\r\nconst NavLinkText = ({ color, text }) => (\r\n  <div\r\n    className=\"navlink\"\r\n    style={{\r\n      color,\r\n    }}\r\n  >\r\n    {text}\r\n  </div>\r\n);\r\n\r\nconst NavLink = ({ test, url, text }) => {\r\n  if (!test) {\r\n    return <NavLinkText color=\"#7d7d7d\" text={text} />;\r\n  }\r\n\r\n  return (\r\n    <Link to={`${url}`}>\r\n      <NavLinkText color=\"#66ccff\" text={text} />\r\n    </Link>\r\n  );\r\n};\r\n\r\nconst Page = ({ pageContext, location }) => {\r\n  const {\r\n    group, index, first, last, pathPrefix,\r\n  } = pageContext;\r\n\r\n  console.log('pageContext',pageContext)\r\n\r\n  const previousUrl = index - 1 === 1 ? '' : `/${pathPrefix}/${index - 1}`;\r\n  const nextUrl = `/${pathPrefix}/${index + 1}`;\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <div\r\n        className=\"row homepage\"\r\n        style={{\r\n          marginTop: 20,\r\n        }}\r\n      >\r\n        <Sidebar />\r\n        <div className=\"col-xl-6 col-lg-7 col-md-12 col-xs-12 order-2\">\r\n          <div className=\"row\">\r\n          {group.map(({ node }) => (\r\n            <Card {...node.frontmatter} url={node.frontmatter.slug ? node.frontmatter.slug : node.fields.slug} key={node.fields.slug} />\r\n          ))}\r\n          </div>\r\n\r\n          <div\r\n            className=\"row\"\r\n            style={{\r\n              justifyContent: 'space-around',\r\n              marginBottom: '20px',\r\n            }}\r\n          >\r\n            <div className=\"previousLink\">\r\n              <NavLink test={!first} url={previousUrl} text=\"Previous\" />\r\n            </div>\r\n            <div className=\"nextLink\">\r\n              <NavLink test={!last} url={nextUrl} text=\"Next\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-xl-2 col-lg-1 order-3\" />\r\n      </div>\r\n      {/* <ShareBox url={location.href} hasCommentBox={false} /> */}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Page;\r\n","import React from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\nimport ReactGA from 'react-ga';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\n\r\nimport './index.scss';\r\n\r\nconst CommentButton = () => (\r\n  <a\r\n    className=\"share-button\"\r\n    style={{\r\n      lineHeight: '1.7rem',\r\n      color: '#337ab7',\r\n      paddingLeft: '0.15rem',\r\n    }}\r\n    href=\"#gitalk-container\"\r\n    onClick={() =>\r\n      ReactGA.event({\r\n        category: 'User',\r\n        action: 'Goto Comment Box',\r\n      })\r\n    }\r\n  >\r\n    <FontAwesomeIcon icon={['far', 'comment']} />\r\n  </a>\r\n);\r\n\r\nconst ShareBox = ({ url, hasCommentBox }) => (\r\n  <div className=\"m-share-box\">\r\n    <a\r\n      href={`https://www.facebook.com/sharer/sharer.php?u=${url}`}\r\n      title=\"\"\r\n      className=\"share-button\"\r\n      onClick={() =>\r\n        ReactGA.event({\r\n          category: 'Share',\r\n          action: 'Facebook Share',\r\n        })\r\n      }\r\n    >\r\n      <FontAwesomeIcon icon={['fab', 'facebook-f']} />\r\n    </a>\r\n\r\n    {/* 視覺置中 => 稍微往上偏移 */}\r\n    {hasCommentBox && <CommentButton />}\r\n\r\n    <a\r\n      className=\"share-button\"\r\n      href=\"#header\"\r\n      onClick={() => {\r\n        ReactGA.event({\r\n          category: 'User',\r\n          action: 'Scroll to Top',\r\n        });\r\n      }}\r\n      style={{\r\n        lineHeight: '1.7rem',\r\n        paddingLeft: '0.1rem',\r\n      }}\r\n    >\r\n      <FontAwesomeIcon icon={['fas', 'chevron-up']} />\r\n    </a>\r\n  </div>\r\n);\r\n\r\nShareBox.propTypes = {\r\n  url: PropTypes.string.isRequired,\r\n  hasCommentBox: PropTypes.bool,\r\n};\r\n\r\nShareBox.defaultProps = {\r\n  hasCommentBox: true,\r\n};\r\n\r\nexport default ShareBox;\r\n","import React from 'react';\r\nimport { Link } from 'gatsby';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Tag from '../Tag';\r\n\r\nimport { parseImgur } from '../../api/images';\r\n\r\nimport './index.scss';\r\n\r\nconst imageStyle = (headerImage, color) => ({\r\n  // backgroundColor: `${!color.length?'black':'false',typeof(color)}`,\r\n  backgroundImage: ` url(${parseImgur(headerImage, 'large')})`,\r\n});\r\n\r\nconst CardHeader = ({ url, image, backgroundColor,date }) => (\r\n  <Link to={url} href={url}>\r\n    {console.log('bcg',!!backgroundColor)}\r\n    <span className=\"date\">{date}</span>\r\n    <div className=\"wrapper\" style={imageStyle(image, backgroundColor)} />\r\n  </Link>\r\n);\r\n\r\nconst Card = ({\r\n  title,\r\n  date,\r\n  url,\r\n  headerImage,\r\n  headerBackgroundColor,\r\n  description,\r\n  tags = [],\r\n}) => (\r\n  <div className=\"col-sm-12 col-md-6 pb-4\">\r\n    <div className=\"custom-card\">\r\n      {headerImage && (\r\n        <CardHeader\r\n          url={url}\r\n          image={headerImage}\r\n          backgroundColor={headerBackgroundColor}\r\n          date={date.split('T')[0]}\r\n        />\r\n      )}\r\n      <div className=\"data\">\r\n        <div className=\"content\">\r\n          <div className=\"stats\">\r\n            {tags.map(name => (\r\n              <Tag name={name} key={name} />\r\n            ))}\r\n          </div>\r\n          <Link to={url} href={url}>\r\n            <h4 className=\"title\">{title}</h4>\r\n          </Link>\r\n          <p>{description}</p>\r\n          <Link to={url} href={url}>\r\n            Подробнее\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  date: PropTypes.string,\r\n  url: PropTypes.string.isRequired,\r\n  headerImage: PropTypes.string,\r\n  headerBackgroundColor: PropTypes.string,\r\n  description: PropTypes.string.isRequired,\r\n  tags: PropTypes.arrayOf(PropTypes.string),\r\n};\r\n\r\nCardHeader.propTypes = Card.propTypes;\r\n\r\nCard.defaultProps = {\r\n  headerImage: '',\r\n  tags: [],\r\n  date: '',\r\n  headerBackgroundColor: '',\r\n};\r\n\r\nexport default Card;\r\n","// s = Small Square (90×90)\r\n// b = Big Square (160×160)\r\n// t = Small Thumbnail (160×160)\r\n// m = Medium Thumbnail (320×320)\r\n// l = Large Thumbnail (640×640)\r\n// h = Huge Thumbnail (1024×1024)\r\nconst defaultPicture = 'M795H8A.jpg';\r\n\r\nconst parseImgur = (rawImage, size = 'large') => {\r\n  if (!rawImage) {\r\n    return `https://i.imgur.com/${defaultPicture}`;\r\n  }\r\n\r\n  const mapping = {\r\n    'small-square': 's',\r\n    'big-square': 'b',\r\n    small: 't',\r\n    medium: 'm',\r\n    large: 'l',\r\n    huge: 'h',\r\n  };\r\n\r\n  // Don't resize the png image\r\n  // as there is a transparent bug in imgur\r\n  if (rawImage.match('(png)|(gif)')) {\r\n    // Prevent double http url\r\n    if (rawImage.match('http')) {\r\n      return rawImage;\r\n    }\r\n    return `https://i.imgur.com/${rawImage}`;\r\n  }\r\n\r\n  const resizedImage = rawImage.replace(/(.*)\\.(.*)/, `$1${mapping[size]}.$2`);\r\n  // Prevent double http url\r\n  if (resizedImage.match('http')) {\r\n    return resizedImage;\r\n  }\r\n  return `https://i.imgur.com/${resizedImage}`;\r\n};\r\n\r\nconst parseTitle = (title, text) => `title=\"${title || text}\"`;\r\n\r\nconst parseImageTag = ({ href, title, text }) => `<img class=\"lozad d-block mx-auto\" data-src=${parseImgur(\r\n  href,\r\n  'large',\r\n)} ${parseTitle(title, text)} />`;\r\n\r\nconst getGalleryImage = ({ href, title, text }) => `<a data-fancybox=\"gallery\" href=\"${parseImgur(\r\n  href,\r\n  'huge',\r\n)}\">${parseImageTag({ href, title, text })}</a>`;\r\n\r\nmodule.exports = {\r\n  parseImgur,\r\n  parseImageTag,\r\n  getGalleryImage,\r\n};\r\n"],"sourceRoot":""}